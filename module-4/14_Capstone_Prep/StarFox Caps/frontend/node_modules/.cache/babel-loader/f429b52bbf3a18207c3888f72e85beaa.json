{"remainingRequest":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\src\\router.js","dependencies":[{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\src\\router.js","mtime":1575648010861},{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport auth from \"./auth\";\nimport Home from \"./views/Home.vue\";\nimport Login from \"./views/Login.vue\";\nimport Register from \"./views/Register.vue\";\nimport ListOfPokemon from \"./views/ListOfPokemon.vue\";\nimport Pokemon from \"./views/Pokemon.vue\";\nimport PokemonTeam from \"./views/PokemonTeam.vue\";\nVue.use(Router);\n/**\r\n * The Vue Router is used to \"direct\" the browser to render a specific view component\r\n * inside of App.vue depending on the URL.\r\n *\r\n * It also is used to detect whether or not a route requires the user to have first authenticated.\r\n * If the user has not yet authenticated (and needs to) they are redirected to /login\r\n * If they have (or don't need to) they're allowed to go about their way.\r\n */\n\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/poke',\n    name: 'pokemon',\n    component: Pokemon\n  }, {\n    path: '/pokeDex',\n    name: 'pokedex',\n    component: ListOfPokemon,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/login\",\n    name: \"login\",\n    component: Login,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/register\",\n    name: \"register\",\n    component: Register,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/user/team\",\n    name: \"team\",\n    component: PokemonTeam,\n    meta: {\n      requiresAuth: true\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  // Determine if the route requires Authentication\n  var requiresAuth = to.matched.some(function (x) {\n    return x.meta.requiresAuth;\n  });\n  var user = auth.getUser(); // If it does and they are not logged in, send the user to \"/login\"\n\n  if (requiresAuth && !user) {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\src\\router.js"],"names":["Vue","Router","auth","Home","Login","Register","ListOfPokemon","Pokemon","PokemonTeam","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","x","user","getUser"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AAEAR,GAAG,CAACS,GAAJ,CAAQR,MAAR;AAEA;;;;;;;;;AASA,IAAMS,MAAM,GAAG,IAAIT,MAAJ,CAAW;AACxBU,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFM;AAGxBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEhB,IAHb;AAIEiB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GADM,EASN;AACEJ,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEZ;AAHb,GATM,EAeN;AACEU,IAAAA,IAAI,EAAC,UADP;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEb,aAHb;AAIEc,IAAAA,IAAI,EAAC;AACHC,MAAAA,YAAY,EAAC;AADV;AAJP,GAfM,EAuBN;AACEJ,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,SAAS,EAAEf,KAHb;AAIEgB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GAvBM,EA+BN;AACEJ,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAEd,QAHb;AAIEe,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GA/BM,EAuCN;AACEJ,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEX,WAHb;AAIEY,IAAAA,IAAI,EAAC;AACHC,MAAAA,YAAY,EAAE;AADX;AAJP,GAvCM;AAHgB,CAAX,CAAf;AAqDAX,MAAM,CAACY,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC;AACA,MAAMJ,YAAY,GAAGE,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACR,IAAF,CAAOC,YAAX;AAAA,GAAjB,CAArB;AACA,MAAMQ,IAAI,GAAG3B,IAAI,CAAC4B,OAAL,EAAb,CAHoC,CAKpC;;AACA,MAAIT,YAAY,IAAI,CAACQ,IAArB,EAA2B;AACzBJ,IAAAA,IAAI,CAAC,QAAD,CAAJ;AACD,GAFD,MAEO;AACL;AACAA,IAAAA,IAAI;AACL;AACF,CAZD;AAcA,eAAef,MAAf","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport auth from './auth'\r\nimport Home from './views/Home.vue'\r\nimport Login from './views/Login.vue'\r\nimport Register from './views/Register.vue'\r\nimport ListOfPokemon from './views/ListOfPokemon.vue'\r\nimport Pokemon from './views/Pokemon.vue'\r\nimport PokemonTeam from './views/PokemonTeam.vue'\r\n\r\nVue.use(Router)\r\n\r\n/**\r\n * The Vue Router is used to \"direct\" the browser to render a specific view component\r\n * inside of App.vue depending on the URL.\r\n *\r\n * It also is used to detect whether or not a route requires the user to have first authenticated.\r\n * If the user has not yet authenticated (and needs to) they are redirected to /login\r\n * If they have (or don't need to) they're allowed to go about their way.\r\n */\r\n\r\nconst router = new Router({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'home',\r\n      component: Home,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: '/poke',\r\n      name: 'pokemon',\r\n      component: Pokemon\r\n\r\n    },\r\n    {\r\n      path:'/pokeDex',\r\n      name: 'pokedex',\r\n      component: ListOfPokemon,\r\n      meta:{\r\n        requiresAuth:false\r\n      }\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      name: \"login\",\r\n      component: Login,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/register\",\r\n      name: \"register\",\r\n      component: Register,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/user/team\",\r\n      name: \"team\",\r\n      component: PokemonTeam,\r\n      meta:{\r\n        requiresAuth: true\r\n      }\r\n    }\r\n  ]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // Determine if the route requires Authentication\r\n  const requiresAuth = to.matched.some(x => x.meta.requiresAuth);\r\n  const user = auth.getUser();\r\n\r\n  // If it does and they are not logged in, send the user to \"/login\"\r\n  if (requiresAuth && !user) {\r\n    next(\"/login\");\r\n  } else {\r\n    // Else let them go to their next destination\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"]}]}