{"remainingRequest":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\src\\views\\Login.vue","mtime":1575470449399},{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\student\\workspaces\\ethancornett-java\\module-4\\14_Capstone_Prep\\StarFox Caps\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport auth from '../auth';\r\n\r\nexport default {\r\n  name: 'login',\r\n  components: {},\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      invalidCredentials: false,\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      fetch(`${process.env.VUE_APP_REMOTE_API}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(this.user),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.text();\r\n          } else {\r\n            this.invalidCredentials = true;\r\n          }\r\n        })\r\n        .then((token) => {\r\n          if (token != undefined) {\r\n            if (token.includes('\"')) {\r\n              token = token.replace(/\"/g, '');\r\n            }\r\n            auth.saveToken(token);\r\n            this.$router.push('/');\r\n          }\r\n        })\r\n        .catch((err) => console.error(err));\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"login\" class=\"text-center\">\r\n    <form class=\"form-signin\" @submit.prevent=\"login\">\r\n      <h1 class=\"h3 mb-3 font-weight-normal\">Please Sign In</h1>\r\n      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"invalidCredentials\">\r\n        Invalid username and password!\r\n      </div>\r\n      <div class=\"alert alert-success\" role=\"alert\" v-if=\"this.$route.query.registration\">\r\n        Thank you for registering, please sign in.\r\n      </div>\r\n      <label for=\"username\" class=\"sr-only\">Username</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"username\"\r\n        class=\"form-control\"\r\n        placeholder=\"Username\"\r\n        v-model=\"user.username\"\r\n        required\r\n        autofocus\r\n      />\r\n      <label for=\"password\" class=\"sr-only\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        class=\"form-control\"\r\n        placeholder=\"Password\"\r\n        v-model=\"user.password\"\r\n        required\r\n      />\r\n      <router-link :to=\"{ name: 'register' }\">Need an account?</router-link>\r\n      <button type=\"submit\">Sign in</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport auth from '../auth';\r\n\r\nexport default {\r\n  name: 'login',\r\n  components: {},\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      invalidCredentials: false,\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      fetch(`${process.env.VUE_APP_REMOTE_API}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(this.user),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.text();\r\n          } else {\r\n            this.invalidCredentials = true;\r\n          }\r\n        })\r\n        .then((token) => {\r\n          if (token != undefined) {\r\n            if (token.includes('\"')) {\r\n              token = token.replace(/\"/g, '');\r\n            }\r\n            auth.saveToken(token);\r\n            this.$router.push('/');\r\n          }\r\n        })\r\n        .catch((err) => console.error(err));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}